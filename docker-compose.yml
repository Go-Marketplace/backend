version: '3.5'

services:
  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    container_name: gateway
    image: gateway
    ports:
      - 50052:50052
      - 8080:8080
    depends_on: 
      - order
      - user

  order:
    build:
      context: .
      dockerfile: ./order/Dockerfile
    container_name: order
    image: order
    environment:
      PG_URL: 'postgres://postgres:root@order_postgres:5432/postgres?sslmode=disable'
    ports:
      - 50051:50051
    depends_on:
      order_postgres:
        condition: service_healthy

  user:
    build:
      context: .
      dockerfile: ./user/Dockerfile
    container_name: user
    image: user
    environment:
      PG_URL: 'postgres://postgres:root@user_postgres:5432/postgres?sslmode=disable'
    ports:
      - 50053:50053
    depends_on:
      user_postgres:
        condition: service_healthy

  order_postgres:
    container_name: order_pg_db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - order-pg-data:/var/lib/postgresql/data
    image: postgres:15-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 10

  user_postgres:
    container_name: user_pg_db
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - user-pg-data:/var/lib/postgresql/data
    image: postgres:15-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 10

volumes:
  order-pg-data: 
    name: order-pg-data
  
  user-pg-data: 
    name: user-pg-data
